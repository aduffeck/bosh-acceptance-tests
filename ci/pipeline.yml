groups:
- name: bosh-aws-ubuntu-bats
  jobs:
  - ubuntu-bats
- name: environments
  jobs:
  - create-environment
  - destroy-environment
resources:
- name: bosh-candidate-release-tarballs
  type: s3
  source:
    bucket: bosh-candidate-release-tarballs
    regexp: bosh.*\+dev\.(\d+)\.tgz
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git
- name: bosh-src
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh.git
- name: cpi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bosh-aws-cpi-release
- name: environment
  type: pool
  source:
    branch: master
    pool: aws
    private_key: {{github_deployment_key__bosh-bats-environments}}
    uri: git@github.com:pivotal-cf-experimental/bats-concourse-pool.git
- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-([0-9.]+)-linux-amd64
    region_name: us-east-1
- name: ubuntu-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
- name: bats
  type: git
  source:
    branch: gocli-bats
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
jobs:
- name: create-environment
  plan:
  - get: bosh-src
  - put: environment
- name: destroy-environment
  plan:
  - get: bosh-src
  - put: environment
    params:
      acquire: true
  - task: ensure-terminated
    file: bosh-src/ci/pipelines/aws-bats/tasks/ensure-terminated.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key__primary}}
      AWS_DEFAULT_REGION: {{aws_region__primary}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_key__primary}}
  - put: environment
    params:
      remove: environment
- name: ubuntu-bats
  max_in_flight: 3
  plan:
  - do:
    - aggregate:
      - get: stemcell
        trigger: true
        resource: ubuntu-stemcell
      - get: bosh-release
        trigger: true
        resource: bosh-candidate-release-tarballs
      - get: cpi-release
        trigger: true
        params:
          tarball: true
      - get: bats
      - get: bosh-cli
      - get: bosh-deployment
      - get: bosh-src
    - put: environment
      params:
        acquire: true
    - do:
      - task: prepare-environment-aws
        file: bats/ci/tasks/prepare-environment-aws.yml
        params:
          BOSH_access_key_id: {{aws_access_key__primary}}
          BOSH_secret_access_key: {{aws_secret_key__primary}}
          BOSH_region: {{aws_region__primary}}
          STEMCELL_NAME: "bosh-aws-xen-hvm-ubuntu-trusty-go_agent"
      - task: deploy-director
        file: bats/ci/tasks/deploy-director.yml
        params: {}
      - task: run-bats
        file: bats/ci/tasks/run-bats.yml
      ensure:
        task: destroy-director
        file: bats/ci/tasks/destroy-director.yml
        params:
          deployment_name: certification
    ensure:
      put: environment
      params:
        release: environment

